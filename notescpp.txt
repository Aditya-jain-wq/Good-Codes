int *int_ptr {nullptr}; or int x {5};

int_ptr = new int; //allocate int on heap
delete int_ptr; //frees allocated storage



<imp>

int* dont_do_this (){
	int size;
		// size var is on stack and when f(n) terminates same address will be occupied by something else
	return &size

	//or
	int size;
	int* intptr=&size
	return intptr
}
int* to_do(){
	int* intptr=nullptr;
	intptr=new int;
	...
	return intptr;
}

</imp>

// good way to calculate nCr
auto nCr = [](int r, int n){
	int res = 1;
	for(int i = 0; i < r; i++){
		res *= (n - i);
		res /= (i + 1); //Why no approximation problem?
		
		//Coz (i+1) consecutive elements have been multiplied to res so there will be atleast 1 element divisible by i+1
	}
	return res;
};